/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.adesso.referencer.utilities.referenceCreator.GUI;

import de.adesso.referencer.utilities.referenceCreator.Controllers.ExportReferenceToSearchController;
import de.adesso.referencer.utilities.referenceCreator.Entities.Raw.*;
import de.adesso.referencer.utilities.referenceCreator.MyHelpMethods;
import de.adesso.referencer.utilities.referenceCreator.MyHelpMethods4GUI;
import de.adesso.referencer.utilities.referenceCreator.Controllers.RefCreatorElasticController;
import de.adesso.referencer.utilities.referenceCreator.Controllers.RefCreatorGUIController;
import de.adesso.referencer.utilities.referenceCreator.ElasticConfig;
import de.adesso.referencer.utilities.referenceCreator.Entities.search.Reference;
import de.adesso.referencer.utilities.referenceCreator.Entities.search.RestReply;
import de.adesso.referencer.utilities.referenceCreator.database.*;
//import MyReferenzerProject2.utils.ReferenceCreator.database.AllReferenceEntity;
import de.adesso.referencer.utilities.referenceCreator.database.ReferenceJavaDatabase;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.TableModel;

/**
 *
 * @author odzhara-ongom
 */
public class MainPageFrame extends javax.swing.JFrame {

    private ReferenceJavaDatabase database;
    private List<ReferenceEntity> entityList;
    private TableModel entityTableModel;
    private ReferenceEntity selectedEntity;

    public ReferenceEntity getSelectedEntities() {
        return selectedEntity;
    }

    private void refreshFields() {
        entityTableModel = new AllReferenceTableModel(entityList);
        jTableEntity = new JTable(entityTableModel);
        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setViewportView(jTableEntity);
    }

    /**
     * Creates new form MainPageFrame
     */
    public MainPageFrame() {
        initComponents();
    }

    public MainPageFrame(List<ReferenceEntity> entities) {
        initComponents();
        this.entityList = entities;
        refreshFields();
    }

    public MainPageFrame(ReferenceJavaDatabase db) {
        initComponents();
        if (db != null) {
            this.database = db;
            this.entityList = db.getAllReferenceEntity().getEntityList();
            refreshFields();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanelReferences = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEntity = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuAddReferences = new javax.swing.JMenuItem();
        jMenuOpenJSON = new javax.swing.JMenuItem();
        jMenuISaveJSONDatabase = new javax.swing.JMenuItem();
        jMenuSaveJSON = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        menuExit = new javax.swing.JMenuItem();
        jMenuEdit = new javax.swing.JMenu();
        jMenuItemExtras = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuAdessoRole = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItemTopic = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        ElasticSearch = new javax.swing.JMenu();
        jMenuItemReCreateDatabase = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItemDeleteDatabase = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTableEntity.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableEntity);

        javax.swing.GroupLayout jPanelReferencesLayout = new javax.swing.GroupLayout(jPanelReferences);
        jPanelReferences.setLayout(jPanelReferencesLayout);
        jPanelReferencesLayout.setHorizontalGroup(
            jPanelReferencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1127, Short.MAX_VALUE)
        );
        jPanelReferencesLayout.setVerticalGroup(
            jPanelReferencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 249, Short.MAX_VALUE)
        );

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("test");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jMenuFile.setText("File");

        jMenuAddReferences.setText("Add Random References");
        jMenuAddReferences.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAddReferencesActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuAddReferences);

        jMenuOpenJSON.setText("Open JSON Database");
        jMenuOpenJSON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuOpenJSONActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuOpenJSON);

        jMenuISaveJSONDatabase.setText("Save JSON Database");
        jMenuISaveJSONDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuISaveJSONDatabaseActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuISaveJSONDatabase);

        jMenuSaveJSON.setText("Save to JSON Database as ...");
        jMenuSaveJSON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSaveJSONActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuSaveJSON);

        jMenuItem8.setText("Save to Elastic");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItem8);

        menuExit.setText("Exit");
        menuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuExitActionPerformed(evt);
            }
        });
        jMenuFile.add(menuExit);

        jMenuBar1.add(jMenuFile);

        jMenuEdit.setText("Edit");

        jMenuItemExtras.setText("BesonderheitenÂ ");
        jMenuItemExtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExtrasActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItemExtras);

        jMenuItem1.setText("Branchen");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItem1);

        jMenuItem2.setText("ElasticUser");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItem2);

        jMenuItem3.setText("Involvierte RollenÂ ");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItem3);

        jMenuItem4.setText("LOB");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItem4);

        jMenuItem5.setText("Personen");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItem5);

        jMenuAdessoRole.setText("Rollen bei Adesso");
        jMenuAdessoRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAdessoRoleActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuAdessoRole);

        jMenuItem6.setText("Rollen im Projekt");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItem6);

        jMenuItemTopic.setText("Schwerpunktthemen");
        jMenuItemTopic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTopicActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItemTopic);

        jMenuItem7.setText("Verwendete Technologien und Methoden");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItem7);

        jMenuBar1.add(jMenuEdit);

        ElasticSearch.setText("ElasticSearch");

        jMenuItemReCreateDatabase.setText("Recreate Database");
        jMenuItemReCreateDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemReCreateDatabaseActionPerformed(evt);
            }
        });
        ElasticSearch.add(jMenuItemReCreateDatabase);

        jMenuItem9.setText("Export all references");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        ElasticSearch.add(jMenuItem9);

        jMenuItemDeleteDatabase.setText("Delete Database");
        jMenuItemDeleteDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteDatabaseActionPerformed(evt);
            }
        });
        ElasticSearch.add(jMenuItemDeleteDatabase);

        jMenuBar1.add(ElasticSearch);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelReferences, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelReferences, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_menuExitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        AllReferenceUpdateDialog dialog = new AllReferenceUpdateDialog(new javax.swing.JFrame(), true);
        dialog.setVisible(true);
        if (dialog.getEntity() != null) {
            AllReferenceEntity.getInstance().addEntity(dialog.getEntity());
        }
        refreshFields();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int[] sRows = jTableEntity.getSelectedRows();
        if (sRows.length > 0) {
            ReferenceEntity entity = entityList.get(sRows[0]);
            AllReferenceUpdateDialog dialog = new AllReferenceUpdateDialog(new javax.swing.JFrame(), entity, true);
            dialog.setVisible(true);
            if (dialog.getEntity() != null) {
                AllReferenceEntity.getInstance().updateEntity(dialog.getEntity());
            }
            refreshFields();
            jTableEntity.setRowSelectionInterval(sRows[0], sRows[0]);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int[] sRows = jTableEntity.getSelectedRows();
        List<ReferenceEntity> entitiesToDel = new ArrayList<ReferenceEntity>();
        if (sRows.length > 0) {
            for (int i = 0; i < sRows.length; i++) {
                entitiesToDel.add(entityList.get(sRows[i]));
            }
            for (ReferenceEntity entity : entitiesToDel) {
                AllReferenceEntity.getInstance().deleteEntity(entity);
            }
            refreshFields();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        System.out.println(MyHelpMethods.object2PrettyString(AllExtras.getInstance().getEntityList()));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuOpenJSONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuOpenJSONActionPerformed
        // TODO add your handling code here:
        String s = MyHelpMethods4GUI.askFile2OpenString(jFileChooser1, this);
        if (database == null) {
            return;
        }
        database.loadDatabase(s);
        this.entityList = database.getAllReferenceEntity().getEntityList();
        refreshFields();
    }//GEN-LAST:event_jMenuOpenJSONActionPerformed

    private void jMenuSaveJSONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSaveJSONActionPerformed
        // TODO add your handling code here:
        String s = MyHelpMethods4GUI.askFile2SaveString("json", jFileChooser1, this);
        if (database == null) {
            return;
        }
        database.saveDatabase(s);
    }//GEN-LAST:event_jMenuSaveJSONActionPerformed

    private void jMenuItemExtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExtrasActionPerformed
        // TODO add your handling code here:
        RefCreatorGUIController.editExtras();
    }//GEN-LAST:event_jMenuItemExtrasActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        RefCreatorGUIController.editBranch();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        RefCreatorGUIController.editElasticUser();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        RefCreatorGUIController.editInvolvedRole();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        RefCreatorGUIController.editLob();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        RefCreatorGUIController.editPerson();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuAdessoRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAdessoRoleActionPerformed
        // TODO add your handling code here:
        RefCreatorGUIController.editAdessoRole();
    }//GEN-LAST:event_jMenuAdessoRoleActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        RefCreatorGUIController.editProjectRole();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItemTopicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTopicActionPerformed
        // TODO add your handling code here:
        RefCreatorGUIController.editTopic();
    }//GEN-LAST:event_jMenuItemTopicActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        RefCreatorGUIController.editTechnology();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        if (database == null) {
            return;
        }
        RefCreatorElasticController.fillDatabase(database);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        if (database == null) {
            return;
        }
        ExportReferenceToSearchController controller = new ExportReferenceToSearchController(database);
        RestReply reply = controller.exportAllReferences();
        System.out.println(reply.getCount());
        String titel = "Update Results";
        String label, text;
        if (reply.isSuccess()) {
            label = "No errors during update. " + reply.getCount() + " references was updated";
            text = MyHelpMethods.object2PrettyString(reply.getResult());
        } else {
            label = "Error during update: " + reply.getError();
            text = MyHelpMethods.object2PrettyString(reply);
        }
        YesNoDialogWithTextArea dialog = new YesNoDialogWithTextArea(new javax.swing.JFrame(), titel, label, text, true);
        dialog.setVisible(true);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItemReCreateDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemReCreateDatabaseActionPerformed
        // TODO add your handling code here:
        ExportReferenceToSearchController controller = new ExportReferenceToSearchController();
        RestReply reply = controller.reCreateDatabase();
        String titel = "Results of recreating the index";
        String label, text;
        if (reply.isSuccess()) {
            label = "No errors during recreation request";
            text = "Result of creation index: " + MyHelpMethods.object2PrettyString(reply.getResult());
        } else {
            label = "Error during recreation request: " + reply.getError();
            text = MyHelpMethods.object2PrettyString(reply);
        }
        YesNoDialogWithTextArea dialog = new YesNoDialogWithTextArea(titel, label, text);
        dialog.setButtonYesVisible(false);
        dialog.setButtonNoVisible(false);
        dialog.setVisible(true);
    }//GEN-LAST:event_jMenuItemReCreateDatabaseActionPerformed

    private void jMenuItemDeleteDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteDatabaseActionPerformed
        ExportReferenceToSearchController controller = new ExportReferenceToSearchController();
        RestReply reply = controller.deleteDatabase();
        String titel = "Results of deleting the index";
        String label, text;
        if (reply.isSuccess()) {
            label = "No errors during request of erasing index";
            text = "Result of of erasing index: " + MyHelpMethods.object2PrettyString(reply.getResult());
        } else {
            label = "Error during request of erasing index: " + reply.getError();
            text = MyHelpMethods.object2PrettyString(reply);
        }
        YesNoDialogWithTextArea dialog = new YesNoDialogWithTextArea(titel, label, text);
        dialog.setButtonYesVisible(false);
        dialog.setButtonNoVisible(false);
        dialog.setVisible(true);
    }//GEN-LAST:event_jMenuItemDeleteDatabaseActionPerformed

    private void jMenuISaveJSONDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuISaveJSONDatabaseActionPerformed
        if (database == null) {
            return;
        }
        database.saveDatabase(ElasticConfig.getJsonDefaultDatabaseFilename());
    }//GEN-LAST:event_jMenuISaveJSONDatabaseActionPerformed

    private void jMenuAddReferencesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAddReferencesActionPerformed
        if (database == null) {
            return;
        }
        DummyDatabaseService instance = new DummyDatabaseService(database);
        instance.createDummyReferences(100);
        refreshFields();
    }//GEN-LAST:event_jMenuAddReferencesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void mainRun(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPageFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu ElasticSearch;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JMenuItem jMenuAddReferences;
    private javax.swing.JMenuItem jMenuAdessoRole;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuEdit;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuISaveJSONDatabase;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenuItem jMenuItemDeleteDatabase;
    private javax.swing.JMenuItem jMenuItemExtras;
    private javax.swing.JMenuItem jMenuItemReCreateDatabase;
    private javax.swing.JMenuItem jMenuItemTopic;
    private javax.swing.JMenuItem jMenuOpenJSON;
    private javax.swing.JMenuItem jMenuSaveJSON;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelReferences;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEntity;
    private javax.swing.JMenuItem menuExit;
    // End of variables declaration//GEN-END:variables
}
